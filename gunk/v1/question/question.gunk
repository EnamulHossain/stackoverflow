package questionpb

import "time"

type QuestionService interface {
	createQuestion(createQuestionRequest) createQuestionResponse
	ListQuestion(ListQuestionRequest) ListQuestionResponse
	DeleteQuestion(DeleteQuestionRequest) DeleteQuestionResponse
	EditQuestion(EditQuestionRequest) EditQuestionResponse
	UpdateQuestion(UpdateQuestionRequest) UpdateQuestionResponse
	GetQueByUser(GetQueByUserRequest) GetQueByUserResponse

	PublishedQuestion(PublishedQuestionRequest) PublishedQuestionResponse
}

type Question struct {
	ID          int    `pb:"1"`
	UserId      int    `pb:"2"`
	CategoryId  int    `pb:"3"`
	Title       string `pb:"4"`
	Description string `pb:"5"`
	Name        string `pb:"6"`
}

type createQuestionRequest struct {
	UserId      int    `pb:"1"`
	CategoryId  int    `pb:"2"`
	Title       string `pb:"3"`
	Description string `pb:"4"`
}

type createQuestionResponse struct {
	Question Question `pb:"1"`
}

type ListQuestionRequest struct {
	SearchTerm string `pb:"1"`
	Limit      int    `pb:"2"`
	Offset     int    `pb:"3"`
}

type ListQuestionResponse struct {
	Questions []Question `pb:"1"`
}

type DeleteQuestionRequest struct {
	ID int `pb:"1"`
}

type DeleteQuestionResponse struct {
}

type EditQuestionRequest struct {
	ID int `pb:"1"`
}

type EditQuestionResponse struct {
	Question Question `pb:"1"`
}

type UpdateQuestionRequest struct {
	ID          int    `pb:"1"`
	Title       string `pb:"2"`
	Description string `pb:"3"`
}

type UpdateQuestionResponse struct{}

type PublishedQuestionRequest struct {
	ID          int       `pb:"1"`
	PublishedAt time.Time `pb:"2"`
}

type PublishedQuestionResponse struct{}

type GetQueByUserRequest struct {
	ID int `pb:"1"`
}

type GetQueByUserResponse struct {
	Questions []Question `pb:"1"`
}
